# This is a prototype and it has shortcomings
#  - Do not re-install prometheus if it already exists
#  - Needs proper Grafana authentication (proper password not stored as plaintext)
#  - Plenty of variable extraction that could occur
#  - Should look at Prometheus tgroups so each metrics endpoint deploys own config
#  - All sorts of security holes would need tightening up
#  - Should use a database other than SQLite for Grafana
---
- hosts: all

  roles:
    - williamyeh.prometheus
    - ansiblebit.grafana

  vars:
    prometheus_components:
      - prometheus
    prometheus_conf_main: prometheus.yml
    grafana_admin_password: "password"
    grafana_conf_data: |
      app_mode = development

      [paths]
      data = {{ grafana_dir_data }}
      logs = {{ grafana_dir_log }}
      plugins = {{ grafana_dir_plugins }}

      [server]
      protocol = http
      http_port = {{ grafana_http_port }}

      [database]
      type = {{ grafana_database.type }}
      host = {{ grafana_database.host }}
      name = {{ grafana_database.name }}
      user = {{ grafana_database.user }}
      password = {{ grafana_database.password }}
      path = {{ grafana_database.path }}

      [session]

      [analytics]
      check_for_updates = true

      [security]
      admin_user = {{ grafana_admin_user }}
      admin_password = {{ grafana_admin_password }}

      [snapshots]

      [users]

      [auth.anonymous]

      [auth.github]

      [auth.google]

      [auth.proxy]

      [auth.basic]

      [auth.ldap]

      [smtp]

      [emails]

      [log]
      mode = file
      level = Info

      [log.console]

      [log.file]

      [event_publisher]

      [dashboards.json]
      enabled = true
      path = /var/lib/grafana/dashboards

  tasks:
    - name: "remove Grafana install detritus"
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - grafana_dir_conf
        - grafana_dir_data
        - grafana_dir_home
        - grafana_dir_log
        - grafana_dir_plugins

    # Installing Prometheus data source, taken from https://github.com/grafana/grafana/issues/1789
    - uri:
        url: http://localhost:3000/api/datasources/name/Prometheus
        user: "{{grafana_admin_user}}"
        password: "{{grafana_admin_password}}"
        force_basic_auth: yes
      register: grafana_prometheus
      failed_when: false
      changed_when: false

    - name: "enable Prometheus Datasource"
      uri:
        url: http://localhost:3000/api/datasources
        method: POST
        user: "{{grafana_admin_user}}"
        password: "{{grafana_admin_password}}"
        body:
          name: "Prometheus"
          type: "prometheus"
          url: "http://localhost:9090"
          access: "proxy"
          isDefault: true
        force_basic_auth: yes
        status_code: 200
        body_format: json
      when: grafana_prometheus.status == 404

    - name: "ensure web server packages are installed"
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      with_items:
        - nginx
        - uwsgi
        - uwsgi-plugin-python

    - name: "ensure default configuration files absent"
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - /etc/nginx/sites-available/default
        - /etc/nginx/sites-enabled/default

    - name: "deploy hello world software"
      copy:
        src: hello_world.py
        dest: /opt/hello_world.py
        owner: root
        group: root
        mode: 0644

    - name: "deploy hello world NGINX configuration"
      copy:
        src: hello_world.nginx.conf
        dest: /etc/nginx/sites-available/hello_world.conf
        owner: root
        group: root
        mode: 0644
      notify:
        - nginx reloaded

    - name: "enable hello world NGINX configuration"
      file:
        src: /etc/nginx/sites-available/hello_world.conf
        dest: /etc/nginx/sites-enabled/hello_world.conf
        state: link
        force: yes

    - name: "deploy hello world UWSGI configuration"
      copy:
        src: hello_world.uwsgi.ini
        dest: /etc/uwsgi/apps-available/hello_world.ini
        owner: root
        group: root
        mode: 0644
      notify:
        - uwsgi reloaded

    - name: "enable hello world UWSGI configuration"
      file:
        src: /etc/uwsgi/apps-available/hello_world.ini
        dest: /etc/uwsgi/apps-enabled/hello_world.ini
        state: link
        force: yes

    - name: "add NGINX extras to enable Prometheus plugin"
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      with_items:
        - nginx-extras

    - name: "get NGINX Prometheus metrics plugin"
      git:
        repo: "https://github.com/knyar/nginx-lua-prometheus.git"
        dest: /opt/nginx-lua-prometheus

    - name: "deploy Prometheus metrics NGINX configuration"
      copy:
        src: prometheus_metrics.nginx.conf
        dest: /etc/nginx/sites-available/prometheus_metrics.conf
        owner: root
        group: root
        mode: 0644
      notify:
        - nginx reloaded

    - name: "enable Prometheus metrics NGINX configuration"
      file:
        src: /etc/nginx/sites-available/prometheus_metrics.conf
        dest: /etc/nginx/sites-enabled/prometheus_metrics.conf
        state: link
        force: yes

    - name: "create Grafana dashboards directory"
      file:
        dest: /var/lib/grafana/dashboards
        state: directory
        owner: grafana
        group: grafana
        mode: 0755

    - name: "deploy Grafana dashboard configuration files"
      copy:
        src: "{{ item }}"
        dest: /var/lib/grafana/dashboards/
        owner: grafana
        group: grafana
        mode: 0644
      with_fileglob:
        "grafana_*_dashboard.json"
      notify:
        - restart grafana

  handlers:
    - name: "nginx reloaded"
      service:
        name: nginx
        state: reloaded

    - name: "uwsgi reloaded"
      service:
        name: uwsgi
        state: restarted
...
